<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ogc.standard.dao.ITradeOrderDAO">
    <resultMap id="tradeOrder_DB_Result" type="tradeOrder">
        <result column="code" property="code"/>
        <result column="type" property="type"/>
        <result column="ads_code" property="adsCode"/>
        <result column="buy_user" property="buyUser"/>
        <result column="sell_user" property="sellUser"/>
        <result column="leave_message" property="leaveMessage"/>
        <result column="trade_currency" property="tradeCurrency"/>
        <result column="trade_coin" property="tradeCoin"/>
        <result column="trade_price" property="tradePrice"/>
        <result column="trade_amount" property="tradeAmount"/>
        <result column="fee" property="fee"/>
        <result column="count" property="count"/>
        <result column="pay_type" property="payType"/>
        <result column="invalid_datetime" property="invalidDatetime"/>
        <result column="status" property="status"/>
        <result column="sb_comment" property="sbComment"/>
        <result column="bs_comment" property="bsComment"/>
        <result column="mark_datetime" property="markDatetime"/>
        <result column="release_datetime" property="releaseDatetime"/>
        <result column="create_datetime" property="createDatetime"/>
        <result column="updater" property="updater"/>
        <result column="update_datetime" property="updateDatetime"/>
        <result column="remark" property="remark"/>
    </resultMap>
    <sql id="where_condition">
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="code != null and code != '' ">
                AND t.code = #{code}
            </if>
            <if test="codeForQuery != null and codeForQuery != '' ">
                AND t.code like "%"#{codeForQuery}"%"
            </if>
            <if test="type != null and type != '' ">
                AND t.type = #{type}
            </if>
            <if test="adsCode != null and adsCode != '' ">
                AND t.ads_code = #{adsCode}
            </if>
            <if test="buyUser != null and buyUser != '' ">
                AND t.buy_user = #{buyUser}
            </if>
            <if test="sellUser != null and sellUser != '' ">
                AND t.sell_user = #{sellUser}
            </if>
            <if test="tradeCoin != null and tradeCoin != '' ">
                AND t.trade_coin = #{tradeCoin}
            </if>
            <if test="tradeCurrency != null and tradeCurrency != '' ">
                AND t.trade_currency = #{tradeCurrency}
            </if>
            <if test="status != null and status != '' ">
                AND t.status = #{status}
            </if>
            <if test="belongUser != null and belongUser != '' ">
                AND (t.buy_user = #{belongUser} or t.sell_user = #{belongUser})
            </if>
            <if test="invalidDatetime != null and invalidDatetime != '' ">
                <![CDATA[AND t.invalid_datetime <= #{invalidDatetime}]]>
            </if>
            <if test="statusList != null and statusList != '' ">
                AND t.status in
                <foreach item="item" index="index" collection="statusList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="tradeCoinList != null and tradeCoinList != ''">
                AND t.trade_coin in
                <foreach item="item" index="index" collection="tradeCoinList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
    </sql>
    <select id="select_tradeOrder" parameterType="tradeOrder" resultMap="tradeOrder_DB_Result">
        SELECT
        t.code
        ,t.type
        ,t.ads_code
        ,t.buy_user
        ,t.sell_user
        ,t.leave_message
        ,t.trade_currency
        ,t.trade_coin
        ,t.trade_price
        ,t.trade_amount
        ,t.fee
        ,t.count
        ,t.pay_type
        ,t.invalid_datetime
        ,t.status
        ,t.sb_comment
        ,t.bs_comment
        ,t.mark_datetime
        ,t.release_datetime
        ,t.create_datetime
        ,t.updater
        ,t.update_datetime
        ,t.remark
        FROM
        tcoin_trade_order t
        <include refid="where_condition"/>
        <trim prefix="ORDER BY ">
            <if test="order != null and order != '' ">
                ${order}
            </if>
        </trim>
    </select>

    <select id="select_tradeOrder_count" parameterType="tradeOrder"
            resultType="java.lang.Long">
        SELECT count(1) FROM tcoin_trade_order t
        <include refid="where_condition"/>
    </select>


    <resultMap id="UserStatisticsMap" type="com.ogc.standard.domain.UserStatistics">
        <result column="jiaoYiCount" property="jiaoYiCount"/>
        <result column="beiPingJiaCount" property="beiPingJiaCount"/>
        <result column="beiHaoPingCount" property="beiHaoPingCount"/>
    </resultMap>
    <!-- 计算交易次数，被评论次数， 和-->


    <insert id="insert_tradeOrder" parameterType="tradeOrder">
        INSERT INTO
            tcoin_trade_order (
                code
                , type
                , ads_code
                , buy_user
                , sell_user

                , leave_message
                , trade_currency
                , trade_coin
                , trade_price
                , trade_amount

                , fee
                , count
                , pay_type
                , invalid_datetime
                , status

                , create_datetime
                , updater
                , update_datetime
                , remark
            )
        VALUES (
            #{code}
            , #{type}
            , #{adsCode}
            , #{buyUser}
            , #{sellUser}

            , #{leaveMessage}
            , #{tradeCurrency}
            , #{tradeCoin}
            , #{tradePrice}
            , #{tradeAmount}

            , #{fee}
            , #{count}
            , #{payType}
            , #{invalidDatetime}
            , #{status}

            , #{createDatetime}
            , #{updater}
            , #{updateDatetime}
            , #{remark}
        )
    </insert>

    <update id="update_submit" parameterType="tradeOrder">
        UPDATE tcoin_trade_order
        SET

            leave_message      = #{leaveMessage}
            , trade_currency   = #{tradeCurrency}
            , trade_coin       = #{tradeCoin}
            , trade_price      = #{tradePrice}
            , trade_amount     = #{tradeAmount}

            , fee              = #{fee}
            , count            = #{count}
            , pay_type         = #{payType}
            , invalid_datetime = #{invalidDatetime}
            , status           = #{status}

            , updater          = #{updater}
            , update_datetime  = #{updateDatetime}
            , remark           = #{remark}

        WHERE code = #{code}
    </update>

    <update id="update_cancel" parameterType="tradeOrder">
        UPDATE tcoin_trade_order
        SET
            status            = #{status}
            , updater         = #{updater}
            , update_datetime = #{updateDatetime}
            , remark          = #{remark}
        WHERE code = #{code}
    </update>

    <update id="update_markPay" parameterType="tradeOrder">
        UPDATE tcoin_trade_order
        SET
            status            = #{status}
            , mark_datetime   = #{markDatetime}
            , updater         = #{updater}
            , update_datetime = #{updateDatetime}
            , remark          = #{remark}
        WHERE code = #{code}
    </update>

    <update id="update_release" parameterType="tradeOrder">
        UPDATE tcoin_trade_order
        SET
            status             = #{status}
            , release_datetime = #{releaseDatetime}
            , updater          = #{updater}
            , update_datetime  = #{updateDatetime}
            , remark           = #{remark}
        WHERE code = #{code}
    </update>

    <update id="update_bsComment" parameterType="tradeOrder">
        UPDATE tcoin_trade_order
        SET
            status            = #{status}
            , bs_comment      = #{bsComment}
            , updater         = #{updater}
            , update_datetime = #{updateDatetime}
            , remark          = #{remark}
        WHERE code = #{code}
    </update>

    <update id="update_sbComment" parameterType="tradeOrder">
        UPDATE tcoin_trade_order
        SET
            status            = #{status}
            , sb_comment      = #{sbComment}
            , updater         = #{updater}
            , update_datetime = #{updateDatetime}
            , remark          = #{remark}
        WHERE code = #{code}
    </update>

    <update id="update_arbitrate" parameterType="tradeOrder">
        UPDATE tcoin_trade_order
        SET
            status            = #{status}
            , updater         = #{updater}
            , update_datetime = #{updateDatetime}
            , remark          = #{remark}
        WHERE code = #{code}
    </update>

    <update id="update_revokePay" parameterType="tradeOrder">
        UPDATE tcoin_trade_order
        SET
            status            = #{status}
            , updater         = #{updater}
            , update_datetime = #{updateDatetime}
            , remark          = #{remark}
        WHERE code = #{code}
    </update>

    <delete id="delete_tradeOrder" parameterType="tradeOrder">
        DELETE FROM tcoin_trade_order
        WHERE
            code = #{code}
    </delete>

    <delete id="deleteByAdsCodeAndStatus" parameterType="tradeOrder">
        DELETE FROM tcoin_trade_order
        WHERE
            ads_code = #{adsCode} AND status = #{status}
    </delete>

    <!-- 查询交易总量 -->
    <select id="selectedTotalTradeCount" parameterType="tradeOrder" resultType="Decimal">
        SELECT ifnull(
        sum(
        count
        ),
        0) AS totalTradeCount
        FROM tcoin_trade_order WHERE
        (sell_user = #{userId} or buy_user = #{userId})
        and
        trade_coin = #{tradeCoin}
        and
        status in
        <foreach item="item" index="index" collection="statusList" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!-- 查询交易总量 -->

</mapper>